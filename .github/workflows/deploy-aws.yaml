name: Deploy to EC2

on:
  pull_request:
    branches:
      - main 
permissions:
      id-token: write
      contents: read 
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Code Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: File upload to S3 Bucket
        run: |
          aws s3 cp --recursive ./ ${{vars.AWS_S3_BUCKET}}

      - name: Connect to EC2 and prepare SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > aws-key.pem
          chmod 600 aws-key.pem

      - name: Download S3 Files on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i aws-key.pem ${{ secrets.EC2_INSTANCE_USER }}@${{ secrets.EC2_PUBLIC_DNS }} << 'EOF'
            mkdir -p monipaep-backend
            cd monipaep-backend
            aws s3 cp --recursive ${{ vars.AWS_S3_BUCKET }} ./
          EOF

      - name: Configure Project on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i aws-key.pem ${{ secrets.EC2_INSTANCE_USER }}@${{ secrets.EC2_PUBLIC_DNS }} << 'EOF'
            cd monipaep-backend
            rm .env
            cp .env.example .env
          EOF

      - name: Run Docker Compose on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i aws-key.pem ${{ secrets.EC2_INSTANCE_USER }}@${{ secrets.EC2_PUBLIC_DNS }} << 'EOF'
            cd monipaep-backend
            docker-compose up -d
          EOF

      - name: Run Migrations on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i aws-key.pem ${{ secrets.EC2_INSTANCE_USER }}@${{ secrets.EC2_PUBLIC_DNS }} << 'EOF'
            cd monipaep-backend
            npm run migration:run
          EOF

      - name: Clean up SSH key
        run: rm aws-key.pem
